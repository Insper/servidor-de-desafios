"""
Django settings for pygym project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
import sys
import json


def create_dir(dirpath):
    try:
        dirpath.mkdir(parents=True)
    except FileExistsError:
        pass


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent
CHALLENGES_DIR = BASE_DIR / 'raw' / 'challenge_files'
CHALLENGES_RAW_DIR = BASE_DIR / 'code_challenge' / 'static' / 'raw'
create_dir(CHALLENGES_DIR)
create_dir(CHALLENGES_RAW_DIR)
CONTENT_RAW_DIR = BASE_DIR / 'content' / 'static' / 'raw'
create_dir(CONTENT_RAW_DIR)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/
try:
    with open(str(Path(BASE_DIR) / '.django_secret_key')) as f:
        SECRET_KEY = f.read()
except FileNotFoundError:
    SECRET_KEY = 'r*gl!)m0t=x##wt##w#4t=fl6-^kk8(smd547w*oi#77=*$69a'
    print('Using development secret key. If you are in the production server you should create a .django_secret_key file with the secret key.')


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
PRODUCTION = False

ALLOWED_HOSTS = []

LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/login/'

# Application definition

INSTALLED_APPS = [
    'core',
    'frontend',
    'code_challenge',
    'trace_challenge',
    'content',
    'thanks',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'pygym.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pygym.wsgi.application'

# Set to True/False to enable/disable aws (to run tests and memory comparisons in trace challenges)
AWS_WANTED = False
AWS_ACCESS_KEY = None
AWS_SECRET_KEY = None
try:
    with open(str(Path(BASE_DIR) / '.aws_credentials')) as f:
        aws_credentials = json.load(f)
    AWS_ACCESS_KEY = aws_credentials['AWS_ACCESS_KEY']
    AWS_SECRET_KEY = aws_credentials['AWS_SECRET_KEY']
except:
    print('Using default configuration for aws lambda', file=sys.stderr)
USE_AWS = AWS_ACCESS_KEY and AWS_SECRET_KEY and AWS_WANTED
if USE_AWS:
    print('Using AWS', file=sys.stderr)
else:
    print('Not using AWS', file=sys.stderr)


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {}
try:
    with open(str(Path(BASE_DIR) / '.db_credentials')) as f:
        db_credentials = json.load(f)
    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': db_credentials['db'],
        'USER': db_credentials['user'],
        'PASSWORD': db_credentials['password'],
        'HOST': 'localhost',
        'PORT': '5432',
    }
except Exception as e:
    print(
        'Using sqlite3. If you want to use PostgreSQL make sure that .db_credentials exists in this project\'s root folder and the keys are correct.',
        file=sys.stderr)
    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
if 'test' in sys.argv:
    DATABASES['default']['ENGINE'] = 'django.db.backends.sqlite3'


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = []

AUTH_USER_MODEL = 'core.PyGymUser'


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
MEDIA_ROOT = 'media/'
