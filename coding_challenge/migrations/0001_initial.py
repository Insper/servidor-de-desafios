# Generated by Django 3.1.3 on 2020-12-14 17:31

import coding_challenge.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChallengeRepo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remote', models.URLField()),
                ('slug', models.SlugField()),
                ('last_commit', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CodingChallenge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1024)),
                ('slug', models.SlugField()),
                ('question', models.TextField()),
                ('published', models.BooleanField(default=True)),
                ('show_stdout', models.BooleanField(default=True)),
                ('function_name', models.CharField(blank=True, max_length=50)),
                ('deleted', models.BooleanField(default=False)),
                ('repo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coding_challenge.challengerepo')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('slug', models.CharField(max_length=128)),
                ('order', models.IntegerField(default=99)),
            ],
            options={
                'ordering': ['order', 'slug'],
            },
        ),
        migrations.CreateModel(
            name='UserTagInteraction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempts', models.IntegerField(default=0)),
                ('successful_attempts', models.IntegerField(default=0)),
                ('total_challenges', models.IntegerField(default=0)),
                ('successful_challenges', models.IntegerField(default=0)),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coding_challenge.tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserChallengeInteraction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempts', models.IntegerField(default=0)),
                ('successful_attempts', models.IntegerField(default=0)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coding_challenge.codingchallenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CodingChallengeSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('code', models.FileField(upload_to=coding_challenge.models.user_challenge_path)),
                ('success', models.BooleanField(default=False)),
                ('feedback', models.TextField(blank=True)),
                ('errors', models.TextField(blank=True)),
                ('stdouts', models.TextField(blank=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coding_challenge.codingchallenge')),
            ],
        ),
        migrations.AddField(
            model_name='codingchallenge',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coding_challenge.tag'),
        ),
    ]
